// <auto-generated />
using System;
using LoanTracker.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LoanTracker.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251024192013_AddProjectDisbursementSeedData")]
    partial class AddProjectDisbursementSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LoanTracker.Domain.Entities.BorrowerType", b =>
                {
                    b.Property<int>("BorrowerTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BorrowerTypeId"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("BorrowerTypeId");

                    b.ToTable("BorrowerTypes", (string)null);

                    b.HasData(
                        new
                        {
                            BorrowerTypeId = 1,
                            Description = "City or town government entity",
                            TypeName = "Municipality"
                        },
                        new
                        {
                            BorrowerTypeId = 2,
                            Description = "County government entity",
                            TypeName = "County"
                        },
                        new
                        {
                            BorrowerTypeId = 3,
                            Description = "Public school district",
                            TypeName = "School District"
                        },
                        new
                        {
                            BorrowerTypeId = 4,
                            Description = "Public university or college",
                            TypeName = "University"
                        },
                        new
                        {
                            BorrowerTypeId = 5,
                            Description = "Small business entity",
                            TypeName = "Small Business"
                        },
                        new
                        {
                            BorrowerTypeId = 6,
                            Description = "State government agency",
                            TypeName = "State Agency"
                        });
                });

            modelBuilder.Entity("LoanTracker.Domain.Entities.Disbursement", b =>
                {
                    b.Property<Guid>("DisbursementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AmountCurrency")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasDefaultValue("USD");

                    b.Property<decimal>("AmountValue")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("Amount");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasComment("When record was created in system");

                    b.Property<DateTime>("DisbursementDate")
                        .HasColumnType("timestamp with time zone")
                        .HasComment("When funds were actually released (can be backdated)");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uuid");

                    b.Property<string>("RecipientDetails")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("RecipientName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("DisbursementId");

                    b.HasIndex("DisbursementDate")
                        .HasDatabaseName("IX_Disbursements_DisbursementDate");

                    b.HasIndex("ProjectId")
                        .HasDatabaseName("IX_Disbursements_ProjectId");

                    b.ToTable("Disbursements", (string)null);

                    b.HasData(
                        new
                        {
                            DisbursementId = new Guid("dddddddd-dddd-dddd-dddd-dddddddddd01"),
                            AmountCurrency = "USD",
                            AmountValue = 200000m,
                            CreatedAt = new DateTime(2024, 1, 20, 12, 0, 0, 0, DateTimeKind.Utc),
                            DisbursementDate = new DateTime(2024, 1, 15, 12, 0, 0, 0, DateTimeKind.Utc),
                            ProjectId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            RecipientDetails = "Initial payment for road repairs phase 1 - Main St and Broadway",
                            RecipientName = "Metro Road Construction LLC"
                        },
                        new
                        {
                            DisbursementId = new Guid("dddddddd-dddd-dddd-dddd-dddddddddd02"),
                            AmountCurrency = "USD",
                            AmountValue = 100000m,
                            CreatedAt = new DateTime(2024, 2, 8, 12, 0, 0, 0, DateTimeKind.Utc),
                            DisbursementDate = new DateTime(2024, 2, 5, 12, 0, 0, 0, DateTimeKind.Utc),
                            ProjectId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            RecipientDetails = "Second payment for road repairs phase 2 - West End Ave",
                            RecipientName = "Metro Road Construction LLC"
                        },
                        new
                        {
                            DisbursementId = new Guid("dddddddd-dddd-dddd-dddd-dddddddddd03"),
                            AmountCurrency = "USD",
                            AmountValue = 150000m,
                            CreatedAt = new DateTime(2024, 2, 10, 12, 0, 0, 0, DateTimeKind.Utc),
                            DisbursementDate = new DateTime(2024, 2, 10, 12, 0, 0, 0, DateTimeKind.Utc),
                            ProjectId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaabbb"),
                            RecipientDetails = "Initial payment for structural reinforcement of Jefferson St Bridge",
                            RecipientName = "Cumberland Bridge Engineering"
                        },
                        new
                        {
                            DisbursementId = new Guid("dddddddd-dddd-dddd-dddd-dddddddddd04"),
                            AmountCurrency = "USD",
                            AmountValue = 250000m,
                            CreatedAt = new DateTime(2024, 2, 15, 12, 0, 0, 0, DateTimeKind.Utc),
                            DisbursementDate = new DateTime(2024, 2, 15, 12, 0, 0, 0, DateTimeKind.Utc),
                            ProjectId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            RecipientDetails = "Foundation and site preparation for new classroom wing",
                            RecipientName = "Shelby Construction Group"
                        });
                });

            modelBuilder.Entity("LoanTracker.Domain.Entities.Loan", b =>
                {
                    b.Property<Guid>("LoanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<DateTime>("ApplicationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("BorrowerName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("BorrowerTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("ContactPerson")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DecisionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DueDay")
                        .HasColumnType("integer");

                    b.Property<decimal>("InterestRate")
                        .HasPrecision(5, 2)
                        .HasColumnType("numeric(5,2)");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("ReviewerNotes")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TermYears")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("LoanId");

                    b.HasIndex("BorrowerTypeId");

                    b.ToTable("Loans", (string)null);

                    b.HasData(
                        new
                        {
                            LoanId = new Guid("11111111-1111-1111-1111-111111111111"),
                            Amount = 700000m,
                            ApplicationDate = new DateTime(2024, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            BorrowerName = "Metro Nashville Infrastructure",
                            BorrowerTypeId = 1,
                            ContactEmail = "jsmith@nashville.gov",
                            ContactPerson = "John Smith",
                            CreatedAt = new DateTime(2024, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            DecisionDate = new DateTime(2024, 1, 5, 12, 0, 0, 0, DateTimeKind.Utc),
                            DueDay = 20,
                            InterestRate = 3.5m,
                            Purpose = "Road repairs and bridge upgrades for city infrastructure",
                            ReviewerNotes = "Critical infrastructure needs. Approved for phased construction.",
                            Status = "Construction",
                            TermYears = 15,
                            UpdatedAt = new DateTime(2024, 2, 10, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            LoanId = new Guid("11111111-1111-1111-1111-111111111112"),
                            Amount = 500000m,
                            ApplicationDate = new DateTime(2024, 2, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            BorrowerName = "Shelby County Schools",
                            BorrowerTypeId = 3,
                            ContactEmail = "mjohnson@shelbycounty.gov",
                            ContactPerson = "Mary Johnson",
                            CreatedAt = new DateTime(2024, 2, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            DecisionDate = new DateTime(2024, 2, 5, 12, 0, 0, 0, DateTimeKind.Utc),
                            DueDay = 20,
                            InterestRate = 2.5m,
                            Purpose = "New classroom wing construction",
                            ReviewerNotes = "Addresses critical overcrowding. Strong enrollment projections.",
                            Status = "Construction",
                            TermYears = 20,
                            UpdatedAt = new DateTime(2024, 2, 15, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            LoanId = new Guid("11111111-1111-1111-1111-111111111113"),
                            Amount = 600000m,
                            ApplicationDate = new DateTime(2024, 3, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            BorrowerName = "Knox County Fire Department",
                            BorrowerTypeId = 2,
                            ContactEmail = "rwilliams@knoxcounty.gov",
                            ContactPerson = "Robert Williams",
                            CreatedAt = new DateTime(2024, 3, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            DecisionDate = new DateTime(2024, 3, 10, 12, 0, 0, 0, DateTimeKind.Utc),
                            DueDay = 20,
                            InterestRate = 3.0m,
                            Purpose = "New fire station and equipment",
                            ReviewerNotes = "Approved. Waiting for contractor selection before first disbursement.",
                            Status = "Approved",
                            TermYears = 15,
                            UpdatedAt = new DateTime(2024, 3, 10, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            LoanId = new Guid("11111111-1111-1111-1111-111111111114"),
                            Amount = 500000m,
                            ApplicationDate = new DateTime(2025, 10, 16, 12, 0, 0, 0, DateTimeKind.Utc),
                            BorrowerName = "Tennessee Tech Small Business",
                            BorrowerTypeId = 5,
                            ContactEmail = "sdavis@tntech.com",
                            ContactPerson = "Sarah Davis",
                            CreatedAt = new DateTime(2025, 10, 16, 12, 0, 0, 0, DateTimeKind.Utc),
                            DueDay = 20,
                            InterestRate = 4.5m,
                            Purpose = "Equipment purchase and facility expansion",
                            Status = "Open",
                            TermYears = 10,
                            UpdatedAt = new DateTime(2025, 10, 16, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            LoanId = new Guid("11111111-1111-1111-1111-111111111115"),
                            Amount = 4000000m,
                            ApplicationDate = new DateTime(2025, 10, 18, 12, 0, 0, 0, DateTimeKind.Utc),
                            BorrowerName = "City of Memphis",
                            BorrowerTypeId = 1,
                            ContactEmail = "jbrown@memphis.gov",
                            ContactPerson = "James Brown",
                            CreatedAt = new DateTime(2025, 10, 18, 12, 0, 0, 0, DateTimeKind.Utc),
                            DueDay = 20,
                            InterestRate = 3.25m,
                            Purpose = "Public transportation infrastructure upgrades",
                            Status = "Open",
                            TermYears = 30,
                            UpdatedAt = new DateTime(2025, 10, 18, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            LoanId = new Guid("22222222-2222-2222-2222-222222222221"),
                            Amount = 5000000m,
                            ApplicationDate = new DateTime(2025, 9, 24, 12, 0, 0, 0, DateTimeKind.Utc),
                            BorrowerName = "University of Tennessee",
                            BorrowerTypeId = 4,
                            ContactEmail = "pgarcia@utk.edu",
                            ContactPerson = "Patricia Garcia",
                            CreatedAt = new DateTime(2025, 9, 24, 12, 0, 0, 0, DateTimeKind.Utc),
                            DueDay = 20,
                            InterestRate = 2.75m,
                            Purpose = "Research facility construction and equipment",
                            Status = "AwaitingReview",
                            TermYears = 30,
                            UpdatedAt = new DateTime(2025, 9, 29, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            LoanId = new Guid("22222222-2222-2222-2222-222222222222"),
                            Amount = 1200000m,
                            ApplicationDate = new DateTime(2025, 9, 27, 12, 0, 0, 0, DateTimeKind.Utc),
                            BorrowerName = "Hamilton County",
                            BorrowerTypeId = 2,
                            ContactEmail = "mmartinez@hamiltoncounty.gov",
                            ContactPerson = "Michael Martinez",
                            CreatedAt = new DateTime(2025, 9, 27, 12, 0, 0, 0, DateTimeKind.Utc),
                            DueDay = 20,
                            InterestRate = 3.5m,
                            Purpose = "Emergency services facility renovation",
                            Status = "AwaitingReview",
                            TermYears = 15,
                            UpdatedAt = new DateTime(2025, 10, 1, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            LoanId = new Guid("22222222-2222-2222-2222-222222222223"),
                            Amount = 8000000m,
                            ApplicationDate = new DateTime(2025, 9, 30, 12, 0, 0, 0, DateTimeKind.Utc),
                            BorrowerName = "Tennessee Department of Transportation",
                            BorrowerTypeId = 6,
                            ContactEmail = "lrodriguez@tn.gov",
                            ContactPerson = "Linda Rodriguez",
                            CreatedAt = new DateTime(2025, 9, 30, 12, 0, 0, 0, DateTimeKind.Utc),
                            DueDay = 20,
                            InterestRate = 3.0m,
                            Purpose = "Highway expansion and bridge repairs",
                            Status = "AwaitingReview",
                            TermYears = 25,
                            UpdatedAt = new DateTime(2025, 10, 4, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            LoanId = new Guid("22222222-2222-2222-2222-222222222224"),
                            Amount = 2500000m,
                            ApplicationDate = new DateTime(2025, 10, 3, 12, 0, 0, 0, DateTimeKind.Utc),
                            BorrowerName = "Metro Nashville School District",
                            BorrowerTypeId = 3,
                            ContactEmail = "dwilson@mnps.org",
                            ContactPerson = "David Wilson",
                            CreatedAt = new DateTime(2025, 10, 3, 12, 0, 0, 0, DateTimeKind.Utc),
                            DueDay = 20,
                            InterestRate = 2.25m,
                            Purpose = "Technology infrastructure upgrade across all schools",
                            Status = "AwaitingReview",
                            TermYears = 20,
                            UpdatedAt = new DateTime(2025, 10, 7, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            LoanId = new Guid("33333333-3333-3333-3333-333333333331"),
                            Amount = 1800000m,
                            ApplicationDate = new DateTime(2025, 9, 9, 12, 0, 0, 0, DateTimeKind.Utc),
                            BorrowerName = "City of Knoxville",
                            BorrowerTypeId = 1,
                            ContactEmail = "banderson@knoxville.gov",
                            ContactPerson = "Barbara Anderson",
                            CreatedAt = new DateTime(2025, 9, 9, 12, 0, 0, 0, DateTimeKind.Utc),
                            DueDay = 20,
                            InterestRate = 3.25m,
                            Purpose = "Public park development and recreation facilities",
                            Status = "ApprovalPending",
                            TermYears = 18,
                            UpdatedAt = new DateTime(2025, 9, 19, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            LoanId = new Guid("33333333-3333-3333-3333-333333333332"),
                            Amount = 3500000m,
                            ApplicationDate = new DateTime(2025, 9, 11, 12, 0, 0, 0, DateTimeKind.Utc),
                            BorrowerName = "Middle Tennessee State University",
                            BorrowerTypeId = 4,
                            ContactEmail = "cthomas@mtsu.edu",
                            ContactPerson = "Christopher Thomas",
                            CreatedAt = new DateTime(2025, 9, 11, 12, 0, 0, 0, DateTimeKind.Utc),
                            DueDay = 20,
                            InterestRate = 2.5m,
                            Purpose = "Student housing complex construction",
                            Status = "ApprovalPending",
                            TermYears = 25,
                            UpdatedAt = new DateTime(2025, 9, 21, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            LoanId = new Guid("33333333-3333-3333-3333-333333333333"),
                            Amount = 400000m,
                            ApplicationDate = new DateTime(2024, 4, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            BorrowerName = "Davidson County Library",
                            BorrowerTypeId = 2,
                            ContactEmail = "jtaylor@nashville.gov",
                            ContactPerson = "Jessica Taylor",
                            CreatedAt = new DateTime(2024, 4, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            DueDay = 20,
                            InterestRate = 3.75m,
                            Purpose = "Library system modernization and technology upgrades",
                            Status = "AwaitingReview",
                            TermYears = 12,
                            UpdatedAt = new DateTime(2024, 4, 5, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            LoanId = new Guid("44444444-4444-4444-4444-444444444441"),
                            Amount = 2200000m,
                            ApplicationDate = new DateTime(2025, 8, 20, 12, 0, 0, 0, DateTimeKind.Utc),
                            BorrowerName = "City of Chattanooga",
                            BorrowerTypeId = 1,
                            ContactEmail = "dwhite@chattanooga.gov",
                            ContactPerson = "Daniel White",
                            CreatedAt = new DateTime(2025, 8, 20, 12, 0, 0, 0, DateTimeKind.Utc),
                            DecisionDate = new DateTime(2025, 9, 4, 12, 0, 0, 0, DateTimeKind.Utc),
                            DueDay = 20,
                            InterestRate = 3.0m,
                            Purpose = "Downtown revitalization project",
                            ReviewerNotes = "Excellent project proposal with strong community support. Approved for full amount requested.",
                            Status = "Approved",
                            TermYears = 20,
                            UpdatedAt = new DateTime(2025, 9, 4, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            LoanId = new Guid("44444444-4444-4444-4444-444444444442"),
                            Amount = 4500000m,
                            ApplicationDate = new DateTime(2025, 8, 25, 12, 0, 0, 0, DateTimeKind.Utc),
                            BorrowerName = "Williamson County School District",
                            BorrowerTypeId = 3,
                            ContactEmail = "kharris@wcsdistrict.com",
                            ContactPerson = "Karen Harris",
                            CreatedAt = new DateTime(2025, 8, 25, 12, 0, 0, 0, DateTimeKind.Utc),
                            DecisionDate = new DateTime(2025, 9, 9, 12, 0, 0, 0, DateTimeKind.Utc),
                            DueDay = 20,
                            InterestRate = 2.25m,
                            Purpose = "New high school construction",
                            ReviewerNotes = "Critical need demonstrated. Project aligns with state education goals.",
                            Status = "Approved",
                            TermYears = 30,
                            UpdatedAt = new DateTime(2025, 9, 9, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            LoanId = new Guid("44444444-4444-4444-4444-444444444443"),
                            Amount = 1000000m,
                            ApplicationDate = new DateTime(2025, 8, 30, 12, 0, 0, 0, DateTimeKind.Utc),
                            BorrowerName = "Tennessee Department of Environment",
                            BorrowerTypeId = 6,
                            ContactEmail = "smartin@tn.gov",
                            ContactPerson = "Steven Martin",
                            CreatedAt = new DateTime(2025, 8, 30, 12, 0, 0, 0, DateTimeKind.Utc),
                            DecisionDate = new DateTime(2025, 9, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            DueDay = 20,
                            InterestRate = 2.75m,
                            Purpose = "Water treatment facility upgrades",
                            ReviewerNotes = "Essential environmental infrastructure project. Approved.",
                            Status = "Approved",
                            TermYears = 15,
                            UpdatedAt = new DateTime(2025, 9, 14, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            LoanId = new Guid("44444444-4444-4444-4444-444444444444"),
                            Amount = 2800000m,
                            ApplicationDate = new DateTime(2025, 9, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            BorrowerName = "Austin Peay State University",
                            BorrowerTypeId = 4,
                            ContactEmail = "njackson@apsu.edu",
                            ContactPerson = "Nancy Jackson",
                            CreatedAt = new DateTime(2025, 9, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            DecisionDate = new DateTime(2025, 9, 16, 12, 0, 0, 0, DateTimeKind.Utc),
                            DueDay = 20,
                            InterestRate = 2.5m,
                            Purpose = "Science building renovation and laboratory upgrades",
                            ReviewerNotes = "Strong academic justification. Supports STEM education initiatives.",
                            Status = "Approved",
                            TermYears = 25,
                            UpdatedAt = new DateTime(2025, 9, 16, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            LoanId = new Guid("44444444-4444-4444-4444-444444444445"),
                            Amount = 1600000m,
                            ApplicationDate = new DateTime(2025, 9, 4, 12, 0, 0, 0, DateTimeKind.Utc),
                            BorrowerName = "Rutherford County",
                            BorrowerTypeId = 2,
                            ContactEmail = "bthompson@rutherfordcounty.gov",
                            ContactPerson = "Brian Thompson",
                            CreatedAt = new DateTime(2025, 9, 4, 12, 0, 0, 0, DateTimeKind.Utc),
                            DecisionDate = new DateTime(2025, 9, 19, 12, 0, 0, 0, DateTimeKind.Utc),
                            DueDay = 20,
                            InterestRate = 3.5m,
                            Purpose = "Public safety communication system upgrade",
                            ReviewerNotes = "Critical public safety need. Approved for full funding.",
                            Status = "Approved",
                            TermYears = 18,
                            UpdatedAt = new DateTime(2025, 9, 19, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            LoanId = new Guid("55555555-5555-5555-5555-555555555551"),
                            Amount = 750000m,
                            ApplicationDate = new DateTime(2025, 8, 28, 12, 0, 0, 0, DateTimeKind.Utc),
                            BorrowerName = "Small Town Manufacturing LLC",
                            BorrowerTypeId = 5,
                            ContactEmail = "klee@stmfg.com",
                            ContactPerson = "Kevin Lee",
                            CreatedAt = new DateTime(2025, 8, 28, 12, 0, 0, 0, DateTimeKind.Utc),
                            DecisionDate = new DateTime(2025, 9, 12, 12, 0, 0, 0, DateTimeKind.Utc),
                            DueDay = 20,
                            InterestRate = 5.5m,
                            Purpose = "Factory expansion and new equipment",
                            ReviewerNotes = "Insufficient collateral and questionable financial projections. Recommend reapplication with revised business plan.",
                            Status = "Denied",
                            TermYears = 10,
                            UpdatedAt = new DateTime(2025, 9, 12, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            LoanId = new Guid("55555555-5555-5555-5555-555555555552"),
                            Amount = 5500000m,
                            ApplicationDate = new DateTime(2025, 8, 31, 12, 0, 0, 0, DateTimeKind.Utc),
                            BorrowerName = "City of Springfield",
                            BorrowerTypeId = 1,
                            ContactEmail = "mclark@springfield.gov",
                            ContactPerson = "Michelle Clark",
                            CreatedAt = new DateTime(2025, 8, 31, 12, 0, 0, 0, DateTimeKind.Utc),
                            DecisionDate = new DateTime(2025, 9, 15, 12, 0, 0, 0, DateTimeKind.Utc),
                            DueDay = 20,
                            InterestRate = 4.0m,
                            Purpose = "Sports complex and convention center",
                            ReviewerNotes = "Project scope exceeds municipality's debt capacity. Insufficient revenue projections to support debt service.",
                            Status = "Denied",
                            TermYears = 25,
                            UpdatedAt = new DateTime(2025, 9, 15, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            LoanId = new Guid("55555555-5555-5555-5555-555555555553"),
                            Amount = 350000m,
                            ApplicationDate = new DateTime(2025, 9, 3, 12, 0, 0, 0, DateTimeKind.Utc),
                            BorrowerName = "Regional Small Business Co-op",
                            BorrowerTypeId = 5,
                            ContactEmail = "amoore@regionalbiz.com",
                            ContactPerson = "Angela Moore",
                            CreatedAt = new DateTime(2025, 9, 3, 12, 0, 0, 0, DateTimeKind.Utc),
                            DecisionDate = new DateTime(2025, 9, 18, 12, 0, 0, 0, DateTimeKind.Utc),
                            DueDay = 20,
                            InterestRate = 6.0m,
                            Purpose = "Shared warehouse facility",
                            ReviewerNotes = "Cooperative structure creates unclear liability. Recommend individual entity applications.",
                            Status = "Denied",
                            TermYears = 8,
                            UpdatedAt = new DateTime(2025, 9, 18, 12, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("LoanTracker.Domain.Entities.Project", b =>
                {
                    b.Property<Guid>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("BudgetAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("Budget");

                    b.Property<string>("BudgetCurrency")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasDefaultValue("USD");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<Guid>("LoanId")
                        .HasColumnType("uuid");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ProjectId");

                    b.HasIndex("LoanId");

                    b.ToTable("Projects", (string)null);

                    b.HasData(
                        new
                        {
                            ProjectId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            BudgetAmount = 400000m,
                            BudgetCurrency = "USD",
                            CreatedAt = new DateTime(2024, 1, 10, 12, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Repair and repaving of major downtown thoroughfares",
                            LoanId = new Guid("11111111-1111-1111-1111-111111111111"),
                            ProjectName = "Road Repairs",
                            UpdatedAt = new DateTime(2024, 1, 10, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            ProjectId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaabbb"),
                            BudgetAmount = 300000m,
                            BudgetCurrency = "USD",
                            CreatedAt = new DateTime(2024, 1, 10, 12, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Structural reinforcement and safety improvements for city bridges",
                            LoanId = new Guid("11111111-1111-1111-1111-111111111111"),
                            ProjectName = "Bridge Upgrades",
                            UpdatedAt = new DateTime(2024, 1, 10, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            ProjectId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            BudgetAmount = 500000m,
                            BudgetCurrency = "USD",
                            CreatedAt = new DateTime(2024, 2, 5, 12, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Construction of new classroom wing to address overcrowding",
                            LoanId = new Guid("11111111-1111-1111-1111-111111111112"),
                            ProjectName = "New Classroom Wing",
                            UpdatedAt = new DateTime(2024, 2, 5, 12, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("LoanTracker.Domain.Entities.Disbursement", b =>
                {
                    b.HasOne("LoanTracker.Domain.Entities.Project", "Project")
                        .WithMany("Disbursements")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("LoanTracker.Domain.Entities.Loan", b =>
                {
                    b.HasOne("LoanTracker.Domain.Entities.BorrowerType", "BorrowerType")
                        .WithMany("Loans")
                        .HasForeignKey("BorrowerTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BorrowerType");
                });

            modelBuilder.Entity("LoanTracker.Domain.Entities.Project", b =>
                {
                    b.HasOne("LoanTracker.Domain.Entities.Loan", "Loan")
                        .WithMany("Projects")
                        .HasForeignKey("LoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loan");
                });

            modelBuilder.Entity("LoanTracker.Domain.Entities.BorrowerType", b =>
                {
                    b.Navigation("Loans");
                });

            modelBuilder.Entity("LoanTracker.Domain.Entities.Loan", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("LoanTracker.Domain.Entities.Project", b =>
                {
                    b.Navigation("Disbursements");
                });
#pragma warning restore 612, 618
        }
    }
}
